import SwiftUI

enum BuiltinSpaces {
    static var doodle: Space {
        return Space(
            windows: [Window(state: WindowState(x: 0, y: 0, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -112, y: -112, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 112, y: -112, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -224, y: -224, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -336, y: -224, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 224, y: -224, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 336, y: -224, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 448, y: -112, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 560, y: 0, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 560, y: 112, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 448, y: 224, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 336, y: 336, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 224, y: 448, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 112, y: 560, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 0, y: 672, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -112, y: 560, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -224, y: 448, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -336, y: 336, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -448, y: 224, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -560, y: 112, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -560, y: 0, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -448, y: -112, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1912.3333333333335, y: -2317.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1912.3333333333335, y: -2205.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -2024.3333333333335, y: -2317.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1800.3333333333335, y: -2317.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1393.3333333333335, y: -2775.8333333333335, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1505.3333333333335, y: -2720.6666666666665, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1569.666666666667, y: -2608.6666666666665, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1569.666666666667, y: -2496.6666666666665, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1342.3333333333335, y: -2663.8333333333335, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1342.3333333333335, y: -2551.8333333333335, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1534, y: -2384.6666666666665, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1476, y: -2272.6666666666665, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1280, y: -2439.8333333333335, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1364, y: -2214.6666666666665, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1168, y: -2393.3333333333335, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1252, y: -2168.6666666666665, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1140, y: -2168.6666666666665, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1028, y: -2220.6666666666674, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1056, y: -2360.6666666666665, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1912.3333333333335, y: -2429.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -944, y: -2332.6666666666674, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1827.4999999999998, y: -2684.333333333333, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1827.4999999999998, y: -2796.333333333333, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1939.4999999999998, y: -2796.333333333333, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1715.4999999999998, y: -2796.333333333333, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1827.4999999999998, y: -2908.333333333333, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -966.0000000000001, y: -2691.833333333333, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -854.0000000000001, y: -2691.833333333333, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1078, y: -2691.833333333333, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -966.0000000000001, y: -2579.833333333333, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -966.0000000000001, y: -2803.833333333333, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -802.8333333333337, y: -2061, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -914.8333333333337, y: -2061, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -802.8333333333337, y: -2173, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -690.8333333333337, y: -2061, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -802.8333333333337, y: -1949, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1436.1666666666665, y: -1899.6666666666667, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1436.1666666666665, y: -2011.6666666666667, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1548.1666666666665, y: -1899.666666666667, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1324.1666666666665, y: -1899.6666666666667, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1436.1666666666665, y: -1787.6666666666667, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1355.8333333333335, y: -3073.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1243.8333333333335, y: -3073.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1243.8333333333335, y: -2961.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1131.8333333333335, y: -3073.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -1243.8333333333335, y: -3185.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3302.333333333333, y: -2001.0000000000002, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3190.333333333333, y: -2001, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3078.333333333333, y: -2001, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3414.333333333333, y: -2001, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2966.333333333333, y: -2001, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3526.333333333333, y: -2001, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3638.333333333333, y: -2001, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3750.333333333333, y: -2113, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3862.333333333333, y: -2225, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3862.333333333333, y: -2337, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3862.333333333333, y: -2449, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2854.333333333333, y: -2113, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2742.333333333333, y: -2225, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2742.333333333333, y: -2337, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2742.333333333333, y: -2449, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2854.333333333333, y: -2561, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2966.333333333333, y: -2673, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2966.333333333333, y: -2785, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2854.333333333333, y: -2785, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2742.333333333333, y: -2785, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2742.333333333333, y: -2897, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2854.333333333333, y: -2897, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2630.333333333333, y: -2897, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2854.333333333333, y: -3009, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2854.333333333333, y: -3121, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2966.333333333333, y: -3233, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3078.333333333333, y: -3233, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3190.333333333333, y: -3233, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3302.333333333333, y: -3233, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3078.333333333333, y: -3009, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3414.333333333333, y: -3121, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3414.333333333333, y: -3009, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3414.333333333333, y: -2897, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3302.333333333333, y: -2785, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3190.333333333333, y: -2673, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3414.333333333333, y: -2673, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3526.333333333333, y: -2673, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3638.333333333333, y: -2673, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3862.333333333333, y: -2561, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3862.333333333333, y: -2673, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3750.333333333333, y: -2561, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3638.333333333333, y: -2449, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3302.333333333333, y: -2561, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3526.333333333333, y: -2337, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3414.333333333333, y: -2337, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3302.333333333333, y: -2337, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3190.333333333333, y: -2449, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2862.166666666667, y: 3253.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2974.166666666667, y: 3253.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2750.166666666667, y: 3365.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2750.166666666667, y: 3477.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2638.166666666667, y: 3477.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2862.166666666667, y: 3477.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2974.166666666667, y: 3477.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3086.166666666667, y: 3477.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3198.166666666667, y: 3589.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3310.166666666667, y: 3589.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3422.166666666667, y: 3701.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3422.166666666667, y: 3813.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3534.166666666667, y: 3925.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3534.166666666667, y: 4037.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3534.166666666667, y: 4150, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3534.166666666667, y: 4262, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3422.166666666667, y: 4374, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3422.166666666667, y: 4486, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3310.166666666667, y: 4598, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3198.166666666667, y: 4598, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3086.166666666667, y: 4598, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2974.166666666667, y: 4598, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2862.166666666667, y: 4598, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2526.166666666667, y: 3477.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2414.166666666667, y: 3589.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2302.166666666667, y: 3589.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2190.166666666667, y: 3701.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2190.166666666667, y: 3813.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2078.166666666667, y: 3925.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2078.166666666667, y: 4037.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2078.166666666667, y: 4150, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2078.166666666667, y: 4262, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2190.166666666667, y: 4374, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2190.166666666667, y: 4486, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2302.166666666667, y: 4598, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2414.166666666667, y: 4598, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2526.166666666667, y: 4598, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2638.166666666667, y: 4598, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2750.166666666667, y: 4598, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2414.166666666667, y: 4262, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2414.166666666667, y: 4374, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2302.166666666667, y: 4262, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2302.166666666667, y: 4150, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2526.166666666667, y: 4262, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2526.166666666667, y: 4150, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2638.166666666667, y: 4262, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2638.166666666667, y: 4150, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2638.166666666667, y: 4374, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2750.166666666667, y: 4262, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2750.166666666667, y: 4374, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2862.166666666667, y: 4262, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2862.166666666667, y: 4374, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2862.166666666667, y: 4150, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2974.166666666667, y: 4374, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2974.166666666667, y: 4262, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2974.166666666667, y: 4150, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3086.166666666667, y: 4262, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3086.166666666667, y: 4150, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3198.166666666667, y: 4262, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3198.166666666667, y: 4374, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3310.166666666667, y: 4262, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3310.166666666667, y: 4150, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2414.166666666667, y: 3701.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2414.166666666667, y: 3813.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2526.166666666667, y: 3813.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2638.166666666667, y: 3813.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3198.166666666667, y: 3701.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3198.166666666667, y: 3813.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 3086.166666666667, y: 3813.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2974.166666666667, y: 3813.9999999999995, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -2072.833333333333, y: 4689.166666666667, width: 150, height: 150), data: WindowData(type: .magicGlobe, saveData: ["animatedMeshBackgroundSalt": "2015584093", "hue": "0.5"], minHeight: 150, minWidth: 150, maxHeight: 500, maxWidth: 500, minAspectRatio: 0.8333, maxAspectRatio: 1.2, layer: 0), false), Window(state: WindowState(x: -2234.833333333333, y: 4689.166666666667, width: 150, height: 150), data: WindowData(type: .magicGlobe, saveData: ["hue": "0.3", "animatedMeshBackgroundSalt": "1146112960"], minHeight: 150, minWidth: 150, maxHeight: 500, maxWidth: 500, minAspectRatio: 0.8333, maxAspectRatio: 1.2, layer: 0), false), Window(state: WindowState(x: -2072.833333333333, y: 4527.166666666667, width: 150, height: 150), data: WindowData(type: .magicGlobe, saveData: ["hue": "0.7", "animatedMeshBackgroundSalt": "945311832"], minHeight: 150, minWidth: 150, maxHeight: 500, maxWidth: 500, minAspectRatio: 0.8333, maxAspectRatio: 1.2, layer: 0), false), Window(state: WindowState(x: -1910.833333333333, y: 4689.166666666667, width: 150, height: 150), data: WindowData(type: .magicGlobe, saveData: ["hue": "0.7", "animatedMeshBackgroundSalt": "482449168"], minHeight: 150, minWidth: 150, maxHeight: 500, maxWidth: 500, minAspectRatio: 0.8333, maxAspectRatio: 1.2, layer: 0), false), Window(state: WindowState(x: -2072.833333333333, y: 4851.166666666667, width: 150, height: 150), data: WindowData(type: .magicGlobe, saveData: ["animatedMeshBackgroundSalt": "476140867", "hue": "0.3"], minHeight: 150, minWidth: 150, maxHeight: 500, maxWidth: 500, minAspectRatio: 0.8333, maxAspectRatio: 1.2, layer: 0), false), Window(state: WindowState(x: -2234.833333333333, y: 4527.166666666667, width: 150, height: 150), data: WindowData(type: .magicGlobe, saveData: ["animatedMeshBackgroundSalt": "716183793", "hue": "0.3"], minHeight: 150, minWidth: 150, maxHeight: 500, maxWidth: 500, minAspectRatio: 0.8333, maxAspectRatio: 1.2, layer: 0), false), Window(state: WindowState(x: -1910.833333333333, y: 4527.166666666667, width: 150, height: 150), data: WindowData(type: .magicGlobe, saveData: ["hue": "0.7", "animatedMeshBackgroundSalt": "1680385908"], minHeight: 150, minWidth: 150, maxHeight: 500, maxWidth: 500, minAspectRatio: 0.8333, maxAspectRatio: 1.2, layer: 0), false), Window(state: WindowState(x: -2234.833333333333, y: 4851.166666666667, width: 150, height: 150), data: WindowData(type: .magicGlobe, saveData: ["animatedMeshBackgroundSalt": "952946280", "hue": "0.3"], minHeight: 150, minWidth: 150, maxHeight: 500, maxWidth: 500, minAspectRatio: 0.8333, maxAspectRatio: 1.2, layer: 0), false), Window(state: WindowState(x: -1910.833333333333, y: 4851.166666666667, width: 150, height: 150), data: WindowData(type: .magicGlobe, saveData: ["animatedMeshBackgroundSalt": "1749038742", "hue": "0.7"], minHeight: 150, minWidth: 150, maxHeight: 500, maxWidth: 500, minAspectRatio: 0.8333, maxAspectRatio: 1.2, layer: 0), false), Window(state: WindowState(x: -2396.833333333333, y: 4689.166666666667, width: 150, height: 150), data: WindowData(type: .magicGlobe, saveData: ["animatedMeshBackgroundSalt": "408590993", "hue": "0.1"], minHeight: 150, minWidth: 150, maxHeight: 500, maxWidth: 500, minAspectRatio: 0.8333, maxAspectRatio: 1.2, layer: 0), false), Window(state: WindowState(x: -2072.833333333333, y: 4365.166666666667, width: 150, height: 150), data: WindowData(type: .magicGlobe, saveData: ["hue": "0.9", "animatedMeshBackgroundSalt": "1851703604"], minHeight: 150, minWidth: 150, maxHeight: 500, maxWidth: 500, minAspectRatio: 0.8333, maxAspectRatio: 1.2, layer: 0), false), Window(state: WindowState(x: -1748.833333333333, y: 4689.166666666667, width: 150, height: 150), data: WindowData(type: .magicGlobe, saveData: ["animatedMeshBackgroundSalt": "1777040533", "hue": "0.9"], minHeight: 150, minWidth: 150, maxHeight: 500, maxWidth: 500, minAspectRatio: 0.8333, maxAspectRatio: 1.2, layer: 0), false), Window(state: WindowState(x: -2072.833333333333, y: 5013.166666666667, width: 150, height: 150), data: WindowData(type: .magicGlobe, saveData: ["animatedMeshBackgroundSalt": "993101823", "hue": "0.1"], minHeight: 150, minWidth: 150, maxHeight: 500, maxWidth: 500, minAspectRatio: 0.8333, maxAspectRatio: 1.2, layer: 0), false)],
            name: "Doodle 🎨",
            cameraCenterX: 3084,
            cameraCenterY: -2796,
            cameraZoom: 0.75,
            showMarkers: true,
            markers: [SpaceMarker(x: 2829.5, y: 3759.5, zoom: 0.75), SpaceMarker(x: -2072.833333333333, y: 4689.166666666667, zoom: 0.85), SpaceMarker(x: -1244.5, y: -2332.5, zoom: 0.75), SpaceMarker(x: 0, y: 225.5, zoom: 0.75), SpaceMarker(x: 3084, y: -2796, zoom: 0.75)],
            disableDots: true,
            lockCamera: false,
            disableOrganizeWindows: true
        )
    }

    static var personal: Space {
        return Space(
            windows: [Window(state: WindowState(x: -189.5, y: 18.5, width: 300, height: 320), data: WindowData(type: .habitTracker, saveData: [:], minHeight: 260, minWidth: 280, maxHeight: 600, maxWidth: 450, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 132.5, y: -74.5, width: 320, height: 134), data: WindowData(type: .image, saveData: [:], minHeight: 134, minWidth: 320, maxHeight: 320, maxWidth: 320, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 136.5, y: -449.5, width: 228, height: 108), data: WindowData(type: .themePicker, saveData: [:], minHeight: 108, minWidth: 228, maxHeight: 160, maxWidth: 228, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -491.5, y: -309, width: 280, height: 200), data: WindowData(type: .quote, saveData: [:], minHeight: 160, minWidth: 160, maxHeight: 440, maxWidth: 440, minAspectRatio: 0.8, maxAspectRatio: 1.55, layer: 0), false), Window(state: WindowState(x: 47.5, y: 79.5, width: 150, height: 150), data: WindowData(type: .magicGlobe, saveData: ["hue": "0.8891473961000697", "animatedMeshBackgroundSalt": "1102382279"], minHeight: 150, minWidth: 150, maxHeight: 500, maxWidth: 500, minAspectRatio: 0.8333, maxAspectRatio: 1.2, layer: 0), false), Window(state: WindowState(x: -461.5, y: -57, width: 220, height: 280), data: WindowData(type: .notes, saveData: ["richTextEditorKey": "YnBsaXN0MDDUAQIDBAUGBwpYJHZlcnNpb25ZJGFyY2hpdmVyVCR0b3BYJG9iamVjdHMSAAGGoF8QD05TS2V5ZWRBcmNoaXZlctEICVRyb290gAGvEBoLDBMXHy0uLzAxOT4/U1RaYmNNZGVobHGBhlUkbnVsbNMNDg8QERJYTlNTdHJpbmdWJGNsYXNzXE5TQXR0cmlidXRlc4ACgBmABNIOFBUWWU5TLnN0cmluZ4ADbxARAEEAIABmAHIAZQBzAGgAIABuAGUAdwAgAGQAYQB5ACAnKNIYGRobWiRjbGFzc25hbWVYJGNsYXNzZXNfEA9OU011dGFibGVTdHJpbmejHB0eXxAPTlNNdXRhYmxlU3RyaW5nWE5TU3RyaW5nWE5TT2JqZWN00yAhDiInLFdOUy5rZXlzWk5TLm9iamVjdHOkIyQlJoAFgAaAB4AIpCgpKiuACYALgAyAF4AUXxAQTlNQYXJhZ3JhcGhTdHlsZV8QEmlzRGVmYXVsdFRleHRDb2xvclZOU0ZvbnRXTlNDb2xvctQyMzQONTY3OFpOU1RhYlN0b3BzXxASTlNXcml0aW5nRGlyZWN0aW9uW05TQWxpZ25tZW50gAAQARAEgArSGBk6O18QF05TTXV0YWJsZVBhcmFncmFwaFN0eWxlozw9Hl8QF05TTXV0YWJsZVBhcmFncmFwaFN0eWxlXxAQTlNQYXJhZ3JhcGhTdHlsZQnbQEFCQ0QORUZHSElKSktMTU5PTTVMPl8QIlVJRm9udE1heGltdW1Qb2ludFNpemVBZnRlclNjYWxpbmdfEBlVSUZvbnRQb2ludFNpemVGb3JTY2FsaW5nXxAQVUlGb250RGVzY3JpcHRvclZOU05hbWVWTlNTaXplXFVJRm9udFRyYWl0c18QD1VJRm9udFBvaW50U2l6ZV8QGVVJRm9udFRleHRTdHlsZUZvclNjYWxpbmdaVUlGb250TmFtZVxVSVN5c3RlbUZvbnQjAAAAAAAAAACADoANI0A0AAAAAAAAgBYQAIAAgA0JXS5TRlVJLVJlZ3VsYXLTVQ5WV1hZXxAXVUlGb250RGVzY3JpcHRvck9wdGlvbnNfEBpVSUZvbnREZXNjcmlwdG9yQXR0cmlidXRlcxKAAIQEgBWAD9MgIQ5bXiyiXF2AEIARol9ggBKAE4AUXxATTlNGb250U2l6ZUF0dHJpYnV0ZV8QGE5TQ1RGb250VUlVc2FnZUF0dHJpYnV0ZV8QEkNURm9udFJlZ3VsYXJVc2FnZdIYGWZnXE5TRGljdGlvbmFyeaJmHtIYGWlqXxAQVUlGb250RGVzY3JpcHRvcqJrHl8QEFVJRm9udERlc2NyaXB0b3LTGBltbm9wWyRjbGFzc2hpbnRzVlVJRm9udKJuHqEv2HJzdHV2Dnd4eXp7fH1+f4BfEBVVSUNvbG9yQ29tcG9uZW50Q291bnRXVUlHcmVlblZVSUJsdWVXVUlBbHBoYVVOU1JHQlVVSVJlZFxOU0NvbG9yU3BhY2UQBCI+E6MoIj6EOqEiP4AAAE8QETAuNDczIDAuMTQ0IDAuMjU4gBgiPvH4PhAC0xgZbYKDhFdVSUNvbG9yooIeoYVXTlNDb2xvctIYGYeIXxAZTlNNdXRhYmxlQXR0cmlidXRlZFN0cmluZ6OJih5fEBlOU011dGFibGVBdHRyaWJ1dGVkU3RyaW5nXxASTlNBdHRyaWJ1dGVkU3RyaW5nAAgAEQAaACQAKQAyADcASQBMAFEAUwBwAHYAfQCGAI0AmgCcAJ4AoAClAK8AsQDWANsA5gDvAQEBBQEXASABKQEwATgBQwFIAUoBTAFOAVABVQFXAVkBWwFdAV8BcgGHAY4BlgGfAaoBvwHLAc0BzwHRAdMB2AHyAfYCEAIjAiQCOwJgAnwCjwKWAp0CqgK8AtgC4wLwAvkC+wL9AwYDCAMKAwwDDgMPAx0DJAM+A1sDYANiA2QDawNuA3ADcgN1A3cDeQN7A5EDrAPBA8YD0wPWA9sD7gPxBAQECwQXBB4EIQQjBDQETARUBFsEYwRpBG8EfAR+BIMEiASNBKEEowSoBKoEsQS5BLwEvgTGBMsE5wTrBQcAAAAAAAACAQAAAAAAAACLAAAAAAAAAAAAAAAAAAAFHA=="], minHeight: 200, minWidth: 200, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -164.5, y: -343.5, width: 350, height: 380), data: WindowData(type: .importantDays, saveData: ["viewState": #"{"list":[]}"#], minHeight: 380, minWidth: 350, maxHeight: 420, maxWidth: 440, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 212.5, y: -268.5, width: 380, height: 230), data: WindowData(type: .countdownTimer, saveData: ["eventName": "WWDC 2025", "selectedDate": "2025-06-09T17:00:00Z", "targetDate": "2025-06-09T17:00:00Z"], minHeight: 230, minWidth: 380, maxHeight: 280, maxWidth: 420, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 1816.5, y: -323.5, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 1928.5, y: -211.5, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2040.5, y: -323.5, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 1704.5, y: -435.5, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2152.5, y: -435.5, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 1592.5, y: -547.5, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2264.5, y: -547.5, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2376.5, y: -659.5, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 1480.5, y: -659.5, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 1480.5, y: -771.5, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 1592.5, y: -883.5, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 1704.5, y: -883.5, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 1816.5, y: -771.5, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2376.5, y: -771.5, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2264.5, y: -883.5, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2152.5, y: -883.5, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 2040.5, y: -771.5, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 1928.5, y: -659.5, width: 100, height: 100), data: WindowData(type: .blank, saveData: [:], minHeight: 100, minWidth: 100, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 1939.902957188126, y: 115.09821748649642, width: 350.0476059077114, height: 200), data: WindowData(type: .notes, saveData: ["richTextEditorKey": "YnBsaXN0MDDUAQIDBAUGBwpYJHZlcnNpb25ZJGFyY2hpdmVyVCR0b3BYJG9iamVjdHMSAAGGoF8QD05TS2V5ZWRBcmNoaXZlctEICVRyb290gAGvEBoLDBMXHy0uLzAxOT5OVGdobnZ3Ynh5fIBmhVUkbnVsbNMNDg8QERJYTlNTdHJpbmdWJGNsYXNzXE5TQXR0cmlidXRlc4ACgBmABNIOFBUWWU5TLnN0cmluZ4ADXxAeVGhhbmsgeW91IGZvciB1c2luZyBXb3JrU3BhY2Uh0hgZGhtaJGNsYXNzbmFtZVgkY2xhc3Nlc18QD05TTXV0YWJsZVN0cmluZ6McHR5fEA9OU011dGFibGVTdHJpbmdYTlNTdHJpbmdYTlNPYmplY3TTICEOIicsV05TLmtleXNaTlMub2JqZWN0c6QjJCUmgAWABoAHgAikKCkqK4AJgAuADYAYgBVfEBBOU1BhcmFncmFwaFN0eWxlV05TQ29sb3JWTlNGb250XxASaXNEZWZhdWx0VGV4dENvbG9y1DIzNA41Njc4Wk5TVGFiU3RvcHNfEBJOU1dyaXRpbmdEaXJlY3Rpb25bTlNBbGlnbm1lbnSAABABEASACtIYGTo7XxAXTlNNdXRhYmxlUGFyYWdyYXBoU3R5bGWjPD0eXxAXTlNNdXRhYmxlUGFyYWdyYXBoU3R5bGVfEBBOU1BhcmFncmFwaFN0eWxl2D9AQUJDDkRFRkdISUpLTE1fEBVVSUNvbG9yQ29tcG9uZW50Q291bnRXVUlHcmVlblZVSUJsdWVXVUlBbHBoYVVOU1JHQlVVSVJlZFxOU0NvbG9yU3BhY2UQBCI+E6MoIj6EOqEiP4AAAE8QETAuNDczIDAuMTQ0IDAuMjU4gAwiPvH4PhAC0xgZT1BRUlskY2xhc3NoaW50c1dVSUNvbG9yolAeoVNXTlNDb2xvcttVVldYWQ5aW1xdXl9fYGFiY01iNWFmXxAiVUlGb250TWF4aW11bVBvaW50U2l6ZUFmdGVyU2NhbGluZ18QGVVJRm9udFBvaW50U2l6ZUZvclNjYWxpbmdfEBBVSUZvbnREZXNjcmlwdG9yVk5TTmFtZVZOU1NpemVcVUlGb250VHJhaXRzXxAPVUlGb250UG9pbnRTaXplXxAZVUlGb250VGV4dFN0eWxlRm9yU2NhbGluZ1pVSUZvbnROYW1lXFVJU3lzdGVtRm9udCMAAAAAAAAAAIAPgA4jQDQAAAAAAACAF4AAgA4JXi5TRlVJLVNlbWlib2xk02kOamtsbV8QF1VJRm9udERlc2NyaXB0b3JPcHRpb25zXxAaVUlGb250RGVzY3JpcHRvckF0dHJpYnV0ZXMSgACEBIAWgBDTICEOb3IsonBxgBGAEqJzdIATgBSAFV8QE05TRm9udFNpemVBdHRyaWJ1dGVfEBhOU0NURm9udFVJVXNhZ2VBdHRyaWJ1dGVfEBVDVEZvbnRFbXBoYXNpemVkVXNhZ2XSGBl6e1xOU0RpY3Rpb25hcnmieh7SGBl9fl8QEFVJRm9udERlc2NyaXB0b3Kifx5fEBBVSUZvbnREZXNjcmlwdG9y0xgZT4GCg1ZVSUZvbnSigR6hLwnSGBmGh18QGU5TTXV0YWJsZUF0dHJpYnV0ZWRTdHJpbmejiIkeXxAZTlNNdXRhYmxlQXR0cmlidXRlZFN0cmluZ18QEk5TQXR0cmlidXRlZFN0cmluZwAIABEAGgAkACkAMgA3AEkATABRAFMAcAB2AH0AhgCNAJoAnACeAKAApQCvALEA0gDXAOIA6wD9AQEBEwEcASUBLAE0AT8BRAFGAUgBSgFMAVEBUwFVAVcBWQFbAW4BdgF9AZIBmwGmAbsBxwHJAcsBzQHPAdQB7gHyAgwCHwIwAkgCUAJXAl8CZQJrAngCegJ/AoQCiQKdAp8CpAKmAq0CuQLBAsQCxgLOAuUDCgMmAzkDQANHA1QDZgOCA40DmgOjA6UDpwOwA7IDtAO2A7cDxgPNA+cEBAQJBAsEDQQUBBcEGQQbBB4EIAQiBCQEOgRVBG0EcgR/BIIEhwSaBJ0EsAS3BL4EwQTDBMQEyQTlBOkFBQAAAAAAAAIBAAAAAAAAAIoAAAAAAAAAAAAAAAAAAAUa"], minHeight: 200, minWidth: 200, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false)],
            name: "Lifestyle 🍎",
            cameraCenterX: -105,
            cameraCenterY: -183.5,
            cameraZoom: 0.9,
            showMarkers: false,
            markers: [SpaceMarker(x: 1928, y: -540.5, zoom: 0.9), SpaceMarker(x: -105, y: -183.5, zoom: 0.9)],
            disableDots: false,
            lockCamera: false,
            disableOrganizeWindows: false
        )
    }

    static var productivity: Space {
        return Space(
            windows: [Window(state: WindowState(x: 152.5, y: 4.5, width: 200, height: 360), data: WindowData(type: .calculator, saveData: ["CalculatorData": #"{"tokens":[],"currentDisplay":"500","currentInput":"500","previousExpression":"20×25"}"#], minHeight: 360, minWidth: 200, maxHeight: 360, maxWidth: 360, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -118, y: 142, width: 317, height: 311), data: WindowData(type: .toDoList, saveData: ["items": #"[{"id":""# + UUID().uuidString + #"","title":"Workout 🏃"},{"id":""# + UUID().uuidString + #"","title":"Read for one hour 📚"},{"id":""# + UUID().uuidString + #"","title":"Calculate 20 × 25"}]"#, "listTitle": "Today 💪"], minHeight: 260, minWidth: 180, maxHeight: 600, maxWidth: 400, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -285.5, y: -551.5, width: 336, height: 293), data: WindowData(type: .habitTracker, saveData: [:], minHeight: 260, minWidth: 280, maxHeight: 600, maxWidth: 450, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -0.5, y: -593, width: 210, height: 210), data: WindowData(type: .magicGlobe, saveData: ["hue": "0.9517950868878532", "animatedMeshBackgroundSalt": "2060772169"], minHeight: 150, minWidth: 150, maxHeight: 500, maxWidth: 500, minAspectRatio: 0.8333, maxAspectRatio: 1.2, layer: 0), false), Window(state: WindowState(x: 192.5, y: 296.5, width: 280, height: 200), data: WindowData(type: .quote, saveData: [:], minHeight: 160, minWidth: 160, maxHeight: 440, maxWidth: 440, minAspectRatio: 0.8, maxAspectRatio: 1.55, layer: 0), false), Window(state: WindowState(x: -119.5, y: 376.5, width: 320, height: 134), data: WindowData(type: .image, saveData: [:], minHeight: 134, minWidth: 320, maxHeight: 320, maxWidth: 320, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -79.5, y: -100.5, width: 240, height: 150), data: WindowData(type: .digitalClock, saveData: [:], minHeight: 120, minWidth: 120, maxHeight: 420, maxWidth: 420, minAspectRatio: 1, maxAspectRatio: 2, layer: 0), false), Window(state: WindowState(x: 15, y: 886.5, width: 320, height: 220), data: WindowData(type: .pomodoroTimer, saveData: [:], minHeight: 220, minWidth: 298, maxHeight: 280, maxWidth: 440, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 1021, y: 17.5, width: 380, height: 230), data: WindowData(type: .countdownTimer, saveData: ["eventName": "WWDC 2025", "selectedDate": "2025-06-09T18:15:04Z", "targetDate": "2025-06-09T13:00:00Z"], minHeight: 230, minWidth: 380, maxHeight: 280, maxWidth: 420, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 1021, y: 334.5, width: 380, height: 380), data: WindowData(type: .importantDays, saveData: ["viewState": #"{"list":[]}"#, "newDayDate": "2022-06-06T18:14:18Z", "newDayName": ""], minHeight: 380, minWidth: 350, maxHeight: 420, maxWidth: 440, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 337, y: 956.5, width: 300, height: 360), data: WindowData(type: .stopwatch, saveData: [:], minHeight: 340, minWidth: 280, maxHeight: 600, maxWidth: 420, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -172.5, y: 1108.5, width: 291, height: 200), data: WindowData(type: .notes, saveData: ["richTextEditorKey": "YnBsaXN0MDDUAQIDBAUGBwpYJHZlcnNpb25ZJGFyY2hpdmVyVCR0b3BYJG9iamVjdHMSAAGGoF8QD05TS2V5ZWRBcmNoaXZlctEICVRyb290gAGvEBoLDBMXHy0uLzAxOT4/U1RaYmNNZGVobHGBhlUkbnVsbNMNDg8QERJYTlNTdHJpbmdWJGNsYXNzXE5TQXR0cmlidXRlc4ACgBmABNIOFBUWWU5TLnN0cmluZ4ADbxAZAEcAbwB0AHQAYQAgAHIAdQBuACAAYQBoAGUAYQBkACAAbwBmACAAdABpAG0AZQAgI/DSGBkaG1okY2xhc3NuYW1lWCRjbGFzc2VzXxAPTlNNdXRhYmxlU3RyaW5noxwdHl8QD05TTXV0YWJsZVN0cmluZ1hOU1N0cmluZ1hOU09iamVjdNMgIQ4iJyxXTlMua2V5c1pOUy5vYmplY3RzpCMkJSaABYAGgAeACKQoKSorgAmAC4AMgBeAFF8QEE5TUGFyYWdyYXBoU3R5bGVfEBJpc0RlZmF1bHRUZXh0Q29sb3JWTlNGb250V05TQ29sb3LUMjM0DjU2NzhaTlNUYWJTdG9wc18QEk5TV3JpdGluZ0RpcmVjdGlvbltOU0FsaWdubWVudIAAEAEQBIAK0hgZOjtfEBdOU011dGFibGVQYXJhZ3JhcGhTdHlsZaM8PR5fEBdOU011dGFibGVQYXJhZ3JhcGhTdHlsZV8QEE5TUGFyYWdyYXBoU3R5bGUJ20BBQkNEDkVGR0hJSkpLTE1OT001TD5fECJVSUZvbnRNYXhpbXVtUG9pbnRTaXplQWZ0ZXJTY2FsaW5nXxAZVUlGb250UG9pbnRTaXplRm9yU2NhbGluZ18QEFVJRm9udERlc2NyaXB0b3JWTlNOYW1lVk5TU2l6ZVxVSUZvbnRUcmFpdHNfEA9VSUZvbnRQb2ludFNpemVfEBlVSUZvbnRUZXh0U3R5bGVGb3JTY2FsaW5nWlVJRm9udE5hbWVcVUlTeXN0ZW1Gb250IwAAAAAAAAAAgA6ADSNANAAAAAAAAIAWEACAAIANCV0uU0ZVSS1SZWd1bGFy01UOVldYWV8QF1VJRm9udERlc2NyaXB0b3JPcHRpb25zXxAaVUlGb250RGVzY3JpcHRvckF0dHJpYnV0ZXMSgACEBIAVgA/TICEOW14solxdgBCAEaJfYIASgBOAFF8QE05TRm9udFNpemVBdHRyaWJ1dGVfEBhOU0NURm9udFVJVXNhZ2VBdHRyaWJ1dGVfEBJDVEZvbnRSZWd1bGFyVXNhZ2XSGBlmZ1xOU0RpY3Rpb25hcnmiZh7SGBlpal8QEFVJRm9udERlc2NyaXB0b3Kiax5fEBBVSUZvbnREZXNjcmlwdG9y0xgZbW5vcFskY2xhc3NoaW50c1ZVSUZvbnSibh6hL9hyc3R1dg53eHl6e3x9fn+AXxAVVUlDb2xvckNvbXBvbmVudENvdW50V1VJR3JlZW5WVUlCbHVlV1VJQWxwaGFVTlNSR0JVVUlSZWRcTlNDb2xvclNwYWNlEAQiPhOjKCI+hDqhIj+AAABPEBEwLjQ3MyAwLjE0NCAwLjI1OIAYIj7x+D4QAtMYGW2Cg4RXVUlDb2xvcqKCHqGFV05TQ29sb3LSGBmHiF8QGU5TTXV0YWJsZUF0dHJpYnV0ZWRTdHJpbmejiYoeXxAZTlNNdXRhYmxlQXR0cmlidXRlZFN0cmluZ18QEk5TQXR0cmlidXRlZFN0cmluZwAIABEAGgAkACkAMgA3AEkATABRAFMAcAB2AH0AhgCNAJoAnACeAKAApQCvALEA5gDrAPYA/wERARUBJwEwATkBQAFIAVMBWAFaAVwBXgFgAWUBZwFpAWsBbQFvAYIBlwGeAaYBrwG6Ac8B2wHdAd8B4QHjAegCAgIGAiACMwI0AksCcAKMAp8CpgKtAroCzALoAvMDAAMJAwsDDQMWAxgDGgMcAx4DHwMtAzQDTgNrA3ADcgN0A3sDfgOAA4IDhQOHA4kDiwOhA7wD0QPWA+MD5gPrA/4EAQQUBBsEJwQuBDEEMwREBFwEZARrBHMEeQR/BIwEjgSTBJgEnQSxBLMEuAS6BMEEyQTMBM4E1gTbBPcE+wUXAAAAAAAAAgEAAAAAAAAAiwAAAAAAAAAAAAAAAAAABSw="], minHeight: 200, minWidth: 200, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 80, y: 1103.5, width: 190, height: 190), data: WindowData(type: .clock, saveData: [:], minHeight: 150, minWidth: 150, maxHeight: 450, maxWidth: 450, minAspectRatio: 0.6180339887498949, maxAspectRatio: 1.618033988749895, layer: 0), false), Window(state: WindowState(x: -1744, y: 60.5, width: 250, height: 320), data: WindowData(type: .dashboard, saveData: [:], minHeight: 300, minWidth: 200, maxHeight: 330, maxWidth: 400, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false)],
            name: "Productivity ⏳",
            cameraCenterX: 57.5,
            cameraCenterY: 123.5,
            cameraZoom: 1.0,
            showMarkers: false,
            markers: [SpaceMarker(x: 87, y: 984, zoom: 1), SpaceMarker(x: -130.5, y: -544.5, zoom: 1), SpaceMarker(x: 57.5, y: 123.5, zoom: 1)],
            disableDots: false,
            lockCamera: false,
            disableOrganizeWindows: false
        )
    }

    static var writing: Space {
        return Space(
            windows: [Window(state: WindowState(x: -342, y: -69.5, width: 150, height: 242.7050983124842), data: WindowData(type: .clock, saveData: [:], minHeight: 150, minWidth: 150, maxHeight: 450, maxWidth: 450, minAspectRatio: 0.6180339887498949, maxAspectRatio: 1.618033988749895, layer: 0), false), Window(state: WindowState(x: -54.5, y: -30.852549156242105, width: 401, height: 320), data: WindowData(type: .notes, saveData: ["richTextEditorKey": ""], minHeight: 200, minWidth: 200, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -216.5, y: -282.8525491562421, width: 264, height: 160), data: WindowData(type: .writingPrompt, saveData: [:], minHeight: 160, minWidth: 160, maxHeight: 440, maxWidth: 440, minAspectRatio: 0.8, maxAspectRatio: 1.65, layer: 0), false), Window(state: WindowState(x: 87.5, y: -312.8525491562421, width: 320, height: 220), data: WindowData(type: .pomodoroTimer, saveData: [:], minHeight: 220, minWidth: 298, maxHeight: 280, maxWidth: 440, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 264.7297893706013, y: -686, width: 210, height: 210), data: WindowData(type: .magicGlobe, saveData: ["animatedMeshBackgroundSalt": "1058763631", "hue": "0.7294111587880858"], minHeight: 150, minWidth: 150, maxHeight: 500, maxWidth: 500, minAspectRatio: 0.8333, maxAspectRatio: 1.2, layer: 0), false), Window(state: WindowState(x: 129.14095648390247, y: -973, width: 420, height: 340), data: WindowData(type: .stopwatch, saveData: ["stopwatchState": #"{"startDate":"# + "\(Double(Date().addingTimeInterval(-3 * 60 * 60).timeIntervalSince1970).description)" + #","accumulatedTime":0,"state":"running","laps":[]}"#], minHeight: 340, minWidth: 280, maxHeight: 600, maxWidth: 420, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -277.62781414598317, y: 432.5369974257455, width: 357.06169657066744, height: 289.99960926638926), data: WindowData(type: .toDoList, saveData: ["items": #"[{"id":""# + UUID().uuidString + #"","title":"Respond to today’s prompt"},{"id":""# + UUID().uuidString + #"","title":"Finish my reading"}]"#, "listTitle": "My Tasks 📝"], minHeight: 260, minWidth: 180, maxHeight: 600, maxWidth: 400, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -299.59911964297925, y: 643.5368020589401, width: 228, height: 108), data: WindowData(type: .themePicker, saveData: [:], minHeight: 108, minWidth: 228, maxHeight: 160, maxWidth: 228, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 102.90303413935055, y: 462.5368020589401, width: 380, height: 230), data: WindowData(type: .countdownTimer, saveData: ["selectedDate": "2025-02-13T18:51:57Z", "targetDate": ISO8601DateFormatter().string(from: Calendar.current.date(bySettingHour: 9, minute: 0, second: 0, of: Calendar.current.date(byAdding: .day, value: 1, to: Date())!)!.addingTimeInterval(-TimeInterval(TimeZone.current.secondsFromGMT()))), "eventName": "Tomorrow!"], minHeight: 230, minWidth: 380, maxHeight: 280, maxWidth: 420, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: -2854.1348538608054, y: -167.7836601293447, width: 352.87184206699226, height: 200), data: WindowData(type: .notes, saveData: ["richTextEditorKey": "YnBsaXN0MDDUAQIDBAUGBwpYJHZlcnNpb25ZJGFyY2hpdmVyVCR0b3BYJG9iamVjdHMSAAGGoF8QD05TS2V5ZWRBcmNoaXZlctEICVRyb290gAGvEBoLDBMXHy0uLzAxNzw9UlNZYWJjZGVobHGAhVUkbnVsbNMNDg8QERJYTlNTdHJpbmdWJGNsYXNzXE5TQXR0cmlidXRlc4ACgBmABNIOFBUWWU5TLnN0cmluZ4ADXllvdSBmb3VuZCBtZSEh0hgZGhtaJGNsYXNzbmFtZVgkY2xhc3Nlc18QD05TTXV0YWJsZVN0cmluZ6McHR5fEA9OU011dGFibGVTdHJpbmdYTlNTdHJpbmdYTlNPYmplY3TTICEOIicsV05TLmtleXNaTlMub2JqZWN0c6QjJCUmgAWABoAHgAikKCkqK4AJgAuADIAXgBRfEBBOU1BhcmFncmFwaFN0eWxlXxASaXNEZWZhdWx0VGV4dENvbG9yVk5TRm9udFdOU0NvbG9y0zIOMzQ1Nl8QEk5TV3JpdGluZ0RpcmVjdGlvblpOU1RhYlN0b3BzEAGACoAA0hgZODlfEBdOU011dGFibGVQYXJhZ3JhcGhTdHlsZaM6Ox5fEBdOU011dGFibGVQYXJhZ3JhcGhTdHlsZV8QEE5TUGFyYWdyYXBoU3R5bGUJ2z4/QEFCDkNERUZHSEhJSktMTU42SjxfECJVSUZvbnRNYXhpbXVtUG9pbnRTaXplQWZ0ZXJTY2FsaW5nXxAZVUlGb250UG9pbnRTaXplRm9yU2NhbGluZ18QEFVJRm9udERlc2NyaXB0b3JWTlNOYW1lVk5TU2l6ZVxVSUZvbnRUcmFpdHNfEA9VSUZvbnRQb2ludFNpemVfEBlVSUZvbnRUZXh0U3R5bGVGb3JTY2FsaW5nWlVJRm9udE5hbWVcVUlTeXN0ZW1Gb250IwAAAAAAAAAAgA6ADSNAQhs8nGiA8oAWEAIjQEIbPJxogPKAAIANCV4uU0ZVSS1TZW1pYm9sZNNUDlVWV1hfEBdVSUZvbnREZXNjcmlwdG9yT3B0aW9uc18QGlVJRm9udERlc2NyaXB0b3JBdHRyaWJ1dGVzEoAAhASAFYAP0yAhDlpdLKJbXIAQgBGiXl+AEoATgBRfEBNOU0ZvbnRTaXplQXR0cmlidXRlXxAYTlNDVEZvbnRVSVVzYWdlQXR0cmlidXRlI0BCGzycaIDyXxAVQ1RGb250RW1waGFzaXplZFVzYWdl0hgZZmdcTlNEaWN0aW9uYXJ5omYe0hgZaWpfEBBVSUZvbnREZXNjcmlwdG9yomseXxAQVUlGb250RGVzY3JpcHRvctMYGW1ub3BbJGNsYXNzaGludHNWVUlGb250om4eoS/YcnN0dXYOd3h5ent8fX5/TV8QFVVJQ29sb3JDb21wb25lbnRDb3VudFdVSUdyZWVuVlVJQmx1ZVdVSUFscGhhVU5TUkdCVVVJUmVkXE5TQ29sb3JTcGFjZRAEIj4ToygiPoQ6oSI/gAAATxARMC40NzMgMC4xNDQgMC4yNTiAGCI+8fg+0xgZbYGCg1dVSUNvbG9yooEeoYRXTlNDb2xvctIYGYaHXxAZTlNNdXRhYmxlQXR0cmlidXRlZFN0cmluZ6OIiR5fEBlOU011dGFibGVBdHRyaWJ1dGVkU3RyaW5nXxASTlNBdHRyaWJ1dGVkU3RyaW5nAAgAEQAaACQAKQAyADcASQBMAFEAUwBwAHYAfQCGAI0AmgCcAJ4AoAClAK8AsQDAAMUA0ADZAOsA7wEBAQoBEwEaASIBLQEyATQBNgE4AToBPwFBAUMBRQFHAUkBXAFxAXgBgAGHAZwBpwGpAasBrQGyAcwB0AHqAf0B/gIVAjoCVgJpAnACdwKEApYCsgK9AsoC0wLVAtcC4ALiAuQC7QLvAvEC8gMBAwgDIgM/A0QDRgNIA08DUgNUA1YDWQNbA10DXwN1A5ADmQOxA7YDwwPGA8sD3gPhA/QD+wQHBA4EEQQTBCQEPAREBEsEUwRZBF8EbARuBHMEeAR9BJEEkwSYBJ8EpwSqBKwEtAS5BNUE2QT1AAAAAAAAAgEAAAAAAAAAigAAAAAAAAAAAAAAAAAABQo="], minHeight: 200, minWidth: 200, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 41.64008270211636, y: 689.5368020589401, width: 430.4784046901912, height: 200), data: WindowData(type: .notes, saveData: ["richTextEditorKey": ""], minHeight: 200, minWidth: 200, maxHeight: 800, maxWidth: 800, minAspectRatio: 0, maxAspectRatio: 1000000000, layer: 0), false), Window(state: WindowState(x: 7.7297893706012815, y: -691, width: 280, height: 200), data: WindowData(type: .quote, saveData: [:], minHeight: 160, minWidth: 160, maxHeight: 440, maxWidth: 440, minAspectRatio: 0.8, maxAspectRatio: 1.55, layer: 0), false)],
            name: "Writing ✍️",
            cameraCenterX: -36.5,
            cameraCenterY: -126,
            cameraZoom: 0.85,
            showMarkers: false,
            markers: [SpaceMarker(x: 179.5, y: -826.5, zoom: 0.8504435420036316), SpaceMarker(x: -14.5, y: 567.5, zoom: 0.85), SpaceMarker(x: -36.5, y: -126, zoom: 0.85)],
            disableDots: false,
            lockCamera: false,
            disableOrganizeWindows: false
        )
    }
}
